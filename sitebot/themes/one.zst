##############################################################################
#                                                                            #
#  one.zst  -  pzs-ng theme                                                  #
#                                                                            #
#  There is only 1 #1 ;)                                                     #
#  Created by: slv                                                           #
#  Maintained by: slv (#glhelp)                                              #
#  Notes: mp3 / 2009. add to ngBot.conf:                                     #
#    set msgreplace(0)      "NEWDIR:/site/mp3/*:NEWDIRMP3"                   #
#    set msgreplace(1)      "NEWDIR:/site/mv/*:NEWDIRMV"                     #
#    set msgreplace(2)      "PRE:/site/mp3/*:PREMP3"                         #
#                                                                            #
#  Tested with:  1.2.x :                                                     #
#                                                                            #
##############################################################################

# Default colors, used for all sections except those defined below
COLOR1      = "12"
COLOR2      = "12"
COLOR3      = "12"
COLOR4      = "14"
COLOR5      = "4"

# Custom section colors. Use same section names as defined in dZSbot.conf.
# IMPORTANT: You MUST define the same number of colors as there are default colors for each section!
# If you have 3 default colors above, then each section below needs exactly 3 colors.
# Sections not defined here will use the default colors above.
#COLOR_GAMES_1   = "05"
#COLOR_GAMES_2   = "08"
#COLOR_GAMES_3   = "12"
#COLOR_APPS_1    = "06"
#COLOR_APPS_2    = "09"
#COLOR_APPS_3    = "13"

PREFIX      = ""
SPLITTER    = ", "
KB          = "%b{%value}kb/s"
MB          = "%b{%value}mb/s"
KBIT        = "%b{%value}kbit/s"
MBIT        = "%b{%value}mbit/s"
fakesection.INVITE = "iNViTE"

## Default announce
announce.DEFAULT                = "%l13{%u{info}} %msg"

## Login announcements
announce.LOGIN                  = "%l13{%u{login}} %b{%u_name}/%g_name has logged in"
announce.LOGOUT                 = "%l13{%u{logout}} %b{%u_name}/%g_name has logged out"
announce.BADHOSTMASK            = "%l13{%u{login}} %b{%u_name} could not login, hostmask %b{%u_hostmask} is not added"
announce.BADPASSWORD            = "%l13{%u{login}} %b{%u_name} could not login, invalid password"
announce.BANNEDHOST             = "%l13{%u{login}} %b{%u_name} could not login, hostmask %b{%u_hostmask} is banned"
announce.DELETED                = "%l13{%u{login}} %b{%u_name} could not login, account deleted"
announce.EXPIRED                = "%l13{%u{login}} %b{%u_name} could not login, account expired."
announce.IPNOTADDED             = "%l13{%u{login}} denied unknown connection from %b{%u_hostmask}"
announce.KILLGHOST              = "%l13{%u{ghost}} %b{%u_name} killed a ghost with pid %b{%pid}"
announce.TAGLINE                = "%l13{%u{tag}} %b{%u_name}/%g_name has changed tagline to %b{%u_tagline}"
announce.TIMEOUT                = "%l13{%u{logout}} %b{%u_name} has timed out after %b{%u_idletime}s"

## Sysop announcements (only important announces are themed)
announce.ADDUSER                = "%l13{%u{siteop}} %b{%u_siteop} added user %b{%u_name}"
announce.GADDUSER               = "%l13{%u{siteop}} %b{%u_siteop} added user %b{%u_name} to group %b{%g_name}"
announce.CHGRPADD               = "%l13{%u{siteop}} %b{%u_siteop} added %b{%u_name} to group %b{%g_name}"
announce.CHGRPDEL               = "%l13{%u{siteop}} %b{%u_siteop} removed %b{%u_name} from group %b{%g_name}"
announce.ADDIP                  = "%l13{%u{siteop}} %b{%u_siteop} added ip %b{%u_ip} to %b{%u_name}"
announce.DELIP                  = "%l13{%u{siteop}} %b{%u_siteop} removed ip %b{%u_ip} from %b{%u_name}"
announce.READDED                = "%l13{%u{siteop}} %b{%u_siteop} readded %b{%u_name}"
announce.DELUSER                = "%l13{%u{siteop}} %b{%u_siteop} deleted %b{%u_name}"
announce.PURGED                 = "%l13{%u{siteop}} %b{%u_siteop} purged %b{%u_name}"
announce.KILLED                 = "%l13{%u{siteop}} %b{%u_siteop} killed %b{%u_name} (PID: %b{%pid})"
announce.SYSOP                  = "%l13{%u{siteop}} %msg"

## glFTPd announcements
announce.NEWDIR                 = "%l6{%u{start}} %l6{%section} %relname | %b{%u_name}/%g_name | %c4{%u_tagline}"
announce.DELDIR                 = "%l6{%u{delete}} %l6{%section} %c4{%path/}%reldir | %b{%u_name}/%g_name"
announce.NUKE                   = "%l6{%u{nuke}} %l6{%section} %c4{%path/}%reldir | %b{%multiplier}x by %b{%nuker}: %reason | losers: %nukees"
announce.UNNUKE                 = "%l6{%u{unnuke}} %l6{%section} %c4{%path/}%reldir | %b{%multiplier}x by %b{%nuker}: %reason | winners: %nukees"
announce.NUKEES                 = "%b{%u_name} (%b{%size}mb)"
announce.WIPE                   = "%l6{%u{wipe}} %l6{section} %c4{%path/}%reldir | %b{%u_name}/%g_name"
announce.WIPE-r                 = "%l6{%u{wipe-r}} %l6{%section} %c4{%path/}%reldir and all subdirectories by %b{%u_name}/%g_name"
announce.ULTEST                 = "%l13{%u{speed}} %b{%u_name}/%g_name tested %b{upload} with a %b{%mbytes}mb file at %b{%mbytesps}mb/s (%mbps mbit)"
announce.DLTEST                 = "%l13{%u{speed}} %b{%u_name}/%g_name tested %b{download} with a %b{%mbytes}mb file at %b{%mbytesps}mb/s (%mbps mbit)"


## Custom announcements (see dZSbot.defaults.conf for info on how to enable)
announce.COVERS                = "%l6{%u{covers}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.NEWCD                 = "%l6{%u{cd}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.NEWDISC               = "%l6{%u{disc}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.SAMPLE                = "%l6{%u{sample}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.SUBTITLES             = "%l6{%u{subs}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.SUBSDONE              = "%l6{%u{subs}} %l6{%section} %relname | %b{%u_name}/%g_name"
announce.REQUESTS              = "%l6{%u{start}} %l6{%section} %c4{%path/}%reldir | %b{%u_name}/%g_name"
announce.NEWDIRMP3             = "%l6{%u{start}} %l6{mp3} %reldir | %b{%u_name}/%g_name | %c4{%u_tagline}"
announce.NEWDIRMV              = "%l6{%u{start}} %l6{mv} %reldir | %b{%u_name}/%g_name | %c4{%u_tagline}"
#announce.PREMP3                = "%c5{%l6{%u{pre}}} %l6{mp3} %reldir | %b{%pregroup} smokes the competition with %b{%files}f/%b{%mbytes}mb"
announce.PREMP3                = "%c5{%l6{%u{pre}}} %l6{mp3} %reldir | %b{%pregroup} smokes the competition with %b{%files}f/%b{%mbytes}mb of %b{%genre}"

## Random announcements (random.EVENT-##)
#random.NEWDIR-0                 = "[%b{new   }][%section] %b{%u_name}/%g_name creates a directory called %b{%relname}"
#random.NEWDIR-1                 = "[%b{new   }][%section] %b{%u_name}/%g_name makes a directory called %b{%relname}"
#random.NEWDIR-2                 = "[%b{new   }][%section] %b{%u_name}/%g_name does mkdir %b{%relname}"

## Special zipscript announcements
announce.DOUBLESFV              = "%l13{%u{notice}} %b{%u_name}/%g_name tried to upload a dupe sfv"
announce.RESUMESFV              = "%l13{%u{notice}} %b{%u_name}/%g_name tried to resume/overwrite an sfv"
announce.BADBITRATE             = "%l13{%u{notice}} %b{%u_name}/%g_name is violating rules by uploading shit with bitrate %b{%bitrate}kbps"
announce.BADGENRE               = "%l13{%u{notice}} %b{%u_name}/%g_name is violating rules by uploading %b{%genre}"
announce.BADYEAR                = "%l13{%u{notice}} %b{%u_name}/%g_name is violating rules by uploading shit from %b{%year}"
announce.BAD_FILE_0SIZE         = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (0-sized file) in %b{%releasename}"
announce.BAD_FILE_BITRATE       = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (banned bitrate) in %b{%releasename}"
announce.BAD_FILE_CRC           = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (crc-mismatch) in %b{%releasename}"
announce.BAD_FILE_DISALLOWED    = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (filetype not allowed) in %b{%releasename}"
announce.BAD_FILE_DUPENFO       = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (dupe nfo) in %b{%releasename}"
announce.BAD_FILE_GENRE         = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (banned genre) in %b{%releasename}"
announce.BAD_FILE_NOSFV         = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (no sfv uploaded yet) in %b{%releasename}"
announce.BAD_FILE_SFV           = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (sfv with errors) in %b{%releasename}"
announce.BAD_FILE_WRONGDIR      = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (wrong dir) in %b{%releasename}"
announce.BAD_FILE_YEAR          = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (banned year) in %b{%releasename}"
announce.BAD_FILE_ZIP           = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (zip integrity failed) in %b{%releasename}"
announce.BAD_FILE_ZIPNFO        = "%l13{%u{notice}} %b{%u_name}/%g_name uploaded a bad file (nfo no allowed in zip-dirs) in %b{%releasename}"
announce.BAD_FILE_DUPERELEASE   = "%l13{%u{notice}} %b{%u_name} of %g_name uploaded a bad file (dupe - release has previously been completed) in %b{%releasename}."

## Loop variables, these format the racers and stats
announce.RACE_AUDIO_LOOP1                   = "%b{%a_name}/%a_gname%splitter"
announce.RACE_AUDIO_LOOP2                   = "%b{%r_name}/%r_gname%splitter"
announce.RACE_OTHER_LOOP1                   = "%b{%a_name}/%a_gname%splitter"
announce.RACE_OTHER_LOOP2                   = "%b{%r_name}/%r_gname%splitter"
announce.RACE_RAR_LOOP1                     = "%b{%a_name}/%a_gname%splitter"
announce.RACE_RAR_LOOP2                     = "%b{%r_name}/%r_gname%splitter"
announce.RACE_VIDEO_LOOP1                   = "%b{%a_name}/%a_gname%splitter"
announce.RACE_VIDEO_LOOP2                   = "%b{%r_name}/%r_gname%splitter"
announce.RACE_ZIP_LOOP1                     = "%b{%a_name}/%a_gname%splitter"
announce.RACE_ZIP_LOOP2                     = "%b{%r_name}/%r_gname%splitter"

announce.HALFWAY_RACE_AUDIO_LOOP1           = "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_OTHER_LOOP1           = "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_RAR_LOOP1             = "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_VIDEO_LOOP1           = "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_ZIP_LOOP1             = "%b{%r_name}/%r_gname%splitter"
announce.NEWLEADER_AUDIO_LOOP1              = "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_OTHER_LOOP1              = "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_RAR_LOOP1                = "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_VIDEO_LOOP1              = "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_ZIP_LOOP1                = "%b{%a_name}/%a_gname%splitter"

announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP1 = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP2 = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP3 = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP1 = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP2 = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP3 = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_OTHER_LOOP1     = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_OTHER_LOOP2     = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_OTHER_LOOP3     = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_RAR_LOOP1       = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_RAR_LOOP2       = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_RAR_LOOP3       = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP1     = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP2     = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP3     = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_ZIP_LOOP1       = "%c4{%b{%r_name}/%r_gname%splitter}"
announce.COMPLETE_STAT_RACE_ZIP_LOOP2       = " %c4{%b{%g_racer_position}. %b{%g_racer_name} (%b{%g_racer_files}f/%b{%g_racer_mbytes}mb/%g_racer_avgspeed)}"
announce.COMPLETE_STAT_RACE_ZIP_LOOP3       = " %c4{%b{%u_racer_position}. %b{%u_racer_name}/%g_racer_name (%b{%u_racer_files}f/%b{%u_racer_mbytes}mb/%u_racer_avgspeed)}"

## Standard zipscript announcements
announce.RACE_AUDIO                     = "[%b{racer }][%section] %b{%reldir} :: %b{%u_name} is racing %loop1 at %u_speed"
announce.RACE_OTHER                     = "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %u_speed"
announce.RACE_RAR                       = "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %u_speed"
announce.RACE_VIDEO                     = "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %u_speed"
announce.RACE_ZIP                       = "[%b{racer }][%section] %b{%reldir} :: %b{%u_name} is racing %loop1 at %u_speed"
announce.SFV_AUDIO                      = "[%b{sfv   }][%section] %b{%reldir} by %b{%u_name}/%g_name :: now expecting %b{%t_filecount} file(s)"
announce.SFV_OTHER                      = "[%b{sfv   }][%section] %b{%relname} by %b{%u_name}/%g_name :: now expecting %b{%t_filecount} file(s)"
announce.SFV_RAR                        = "[%b{sfv   }][%section] %b{%relname} by %b{%u_name}/%g_name :: now expecting %b{%t_filecount} file(s)"
announce.SFV_VIDEO                      = "[%b{sfv   }][%section] %b{%relname} by %b{%u_name}/%g_name :: now expecting %b{%t_filecount} file(s)"
announce.UPDATE_CBR                     = "%l13{%u{update}} %c4{%reldir} | %b{%t_files} track(s) of %b{%genre} from %b{%year} | %samplinghz %mode %bitratekbps (%audio)"
announce.UPDATE_OTHER                   = "%l13{%u{update}} %c4{%relname} | got first file from %b{%u_name}/%g_name at %u_speed. Now expecting %b{%t_mbytes}mb"
announce.UPDATE_RAR                     = "%l13{%u{update}} %c4{%relname} | got first file from %b{%u_name}/%g_name at %u_speed | now expecting %b{%t_mbytes}mb"
announce.UPDATE_VBR                     = "%l13{%u{update}} %c4{%reldir} | %b{%t_files} track(s) of %b{%genre} from %b{%year} | %samplinghz %mode %bitratekbps (%audio %a_stream)"
announce.UPDATE_VIDEO                   = "%l13{%u{update}} %c4{%relname} | got first file from %b{%u_name}/%g_name at %u_speed | now expecting %b{%t_mbytes}mb"
announce.UPDATE_ZIP                     = "%l13{%u{update}} %c4{%relname} | got first file from %b{%u_name}/%g_name at %u_speed | now expecting %b{%t_mbytes}mb"
announce.HALFWAY_NORACE_AUDIO           = "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %u_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_NORACE_OTHER           = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %u_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_NORACE_RAR             = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %u_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_NORACE_VIDEO           = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %u_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_NORACE_ZIP             = "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %u_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_RACE_AUDIO             = "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}mb) at %g_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_RACE_OTHER             = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}mb) at %g_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_RACE_RAR               = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}mb) at %g_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_RACE_VIDEO             = "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}mb) at %g_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.HALFWAY_RACE_ZIP               = "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}mb) at %g_leader_avgspeed. Estimated time left: %b{%t_timeleft}"
announce.NEWLEADER_AUDIO                = "[%b{leader}][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed. Runners up are %loop1. Estimated time left: %b{%t_timeleft}"
announce.NEWLEADER_OTHER                = "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed. Runners up are %loop1. Estimated time left: %b{%t_timeleft}"
announce.NEWLEADER_RAR                  = "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed. Runners up are %loop1. Estimated time left: %b{%t_timeleft}"
announce.NEWLEADER_VIDEO                = "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed. Runners up are %loop1. Estimated time left: %b{%t_timeleft}"
announce.NEWLEADER_ZIP                  = "[%b{leader}][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}mb) at %u_leader_avgspeed. Runners up are %loop1. Estimated time left: %b{%t_timeleft}"
announce.COMPLETE_AUDIO_CBR             = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_AUDIO_VBR             = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_OTHER                 = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_RAR                   = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_VIDEO                 = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_ZIP                   = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %r_avgspeed | %b{number one} is %b{%u_name}/%g_name (%b{%t_files}f/%b{%t_mbytes}mb/%r_avgspeed)"
announce.COMPLETE_STAT_RACE_AUDIO_CBR   = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"
announce.COMPLETE_STAT_RACE_AUDIO_VBR   = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"
announce.COMPLETE_STAT_RACE_OTHER       = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"
announce.COMPLETE_STAT_RACE_RAR         = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"
announce.COMPLETE_STAT_RACE_VIDEO       = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"
announce.COMPLETE_STAT_RACE_ZIP         = "%l13{%u{finish}} %c4{%reldir} | race took %b{%t_duration} at %t_avgspeed | %b{%u_count} runners from %b{%g_count} team(s)\n%l13{%u{result}}%loop3"

## Postdel announce
announce.INCOMPLETE             = "%l6{%u{faul!}} %l6{%section} %releasename | disqualified thanks to %b{%u_name}/%g_name"

## Sample announces
announce.SAMPLEDIR              = "%l6{%u{sample}} %l6{%section} %path has the following specs: Video: %b{%video_type_long} %b{%video_width}x%b{%video_height} pixels (aspectratio: %b{%video_aspect}) @%b{%video_fps}fps - Audio: %b{%video_audio_name} (%b{%video_audio_hz}Hz/%b{%video_audio_channels} channels)"
announce.SAMPLE_AVI             = "%l6{%u{sample}} %l6{%section} %path has the following specs: Video: %b{%video_codec} %b{%video_width}x%b{%video_height} pixels (aspectratio: %b{%video_aspect}) @%b{%video_framerate} - Audio: %b{%audio_codec} (%b{%audio_samplerate}/%b{%audio_channels} @ %audio_bitrate)"
announce.SAMPLE_MPEG2           = "%l6{%u{sample}} %l6{%section} %path has the following specs: Video: %b{%video_codec} %b{%video_width}x%b{%video_height} pixels (aspectratio: %b{%video_aspect}) @%b{%video_framerate} - Audio: %b{%audio_codec} (%b{%audio_samplerate}/%b{%audio_channels} @ %audio_bitrate)"
announce.SAMPLE_QT              = "%l6{%u{sample}} %l6{%section} %path has the following specs: Video: %b{%video_codec} %b{%video_width}x%b{%video_height} pixels (aspectratio: %b{%video_aspect}) @%b{%video_framerate} - Audio: %b{%audio_codec} (%b{%audio_samplerate}/%b{%audio_channels} @ %audio_bitrate)"
announce.SAMPLE_GENERAL         = "%l6{%u{sample}} %l6{%section} %path has the following specs: Video: %b{%video_codec} %b{%video_width}x%b{%video_height} pixels (aspectratio: %b{%video_aspect}) @%b{%video_framerate} - Audio: %b{%audio_codec} (%b{%audio_samplerate}/%b{%audio_channels} @ %audio_bitrate)"
announce.SAMPLE_MPEG1           = "%l6{%u{sample}} %l6{%section} %path has the following specs: Audio: %b{%audio_codec} (%b{%audio_samplerate}/%b{%audio_channels} @ %audio_bitrate) - %b{%audio_genre} from %audio_year"

## Third party scripts
announce.PRE                    = "%c5{%l6{%u{pre}}} %l6{%section} %reldir | %b{%pregroup} smokes the competition with %b{%files}f/%b{%mbytes}mb"
announce.TURGEN                 = "%msg"

## Miscellaneous announcements
announce.BADMSGINVITE           = "%l13{%u{badinv}} %b{%u_ircnick} (%u_host) tried to invite himself with invalid login!"
announce.INVITE                 = "%l13{%u{invite}} %b{%u_name}/%g_name invited himself as %b{%u_ircnick}"
announce.MSGINVITE              = "%l13{%u{invite}} %b{%u_name}/%g_name invited himself as %b{%u_ircnick}"
announce.REQFILLED              = "%l13{%u{filled}} %b{%u_name}/%g_name just filled %b{%releasename} for %b{%u_requester}"
announce.REQUEST                = "%l13{%u{req}} %u_name requests %releasename"

## Bouncer status
announce.BNC                    = "checking bouncer status..."
announce.BNC_PING               = "%b{-} %num. %desc at %ip:%port is %b{down} (can't ping host)"
#announce.BNC_ONLINE             = "%b{-} %num. %desc at %ip:%port is %b{up} (login: %b{%response}ms ping: %b{%ping} (%min/%avg/%max/%mdev))"
announce.BNC_ONLINE             = "%b{-} %num. %desc at %ip:%port is %b{up}"
announce.BNC_OFFLINE            = "%b{-} %num. %desc at %ip:%port is %b{down} (%error)"

## IRC Commands
announce.LEECH                  = "%l13{%u{bw}} current leechers:"
announce.UPLOAD                 = "%l13{%u{bw}} current uploaders:"
announce.IDLE                   = "%l13{%u{bw}} current idlers:"
announce.BW                     = "%l13{%u{bw}} up %b{%uploads}@%upspeed | down %b{%downloads}@%dnspeed | total %b{%transfers}@%totalspeed"
announce.BWUP                   = "%l13{%u{bw}} %b{%uploads} uploads @ %upspeed (%uppercent%)"
announce.BWDN                   = "%l13{%u{bw}} %b{%downloads} downloads @ %dnspeed (%dnpercent%)"
announce.TOTUPDN                = "%l13{%u{bw}} %type %b{%count} at %total (%b{%per}%)"
announce.TOTIDLE                = "%l13{%u{bw}} currently %b{%count} users idle!"
announce.USERIDLE               = "%l13{%u{bw}} %b{%u_name}/%g_name at %idletime"
announce.USER                   = "%l13{%u{bw}} %b{%u_name}/%g_name on %b{%filename} (%b{%fper} done) at %speed (%b{%per} usage)"
announce.SPEEDUP                = "%l13{%u{bw}} %b{%u_name}/%g_name is uploading %b{%f_name} at %upspeed (%uppercent)"
announce.SPEEDDN                = "%l13{%u{bw}} %b{%u_name}/%g_name is downloading %b{%f_name} at %dnspeed (%dnpercent)"
announce.SPEEDID                = "%l13{%u{bw}} %b{%u_name}/%g_name has been idle for %idletime"
announce.SPEEDERROR             = "%l13{%u{bw}} nope, try again. found noone by that name on site"
announce.WELCOME                = "welcome to %b{%sitename}'s sitechan. type %cmdprehelp for help"
announce.FREE                   = "%l13{%u{free}} %b{%free}/%total | %used in use (%perc_used%)"
#announce.FREE-DEV               = "%section: %b{%free} (%perc_free%) free, %b{%used} (%perc_used%) used, out of %b{%total} | "
announce.FREE-DEV               = " "
announce.UPTIME                 = "%l13{%u{uptime}} system %time, %b{%users} user(s) | load: %load | eggdrop %eggdrop"

## IRC Command: !new
announce.NEW                    = "%b{(new)} latest releases in: %b{%section}"
announce.NEW_BODY               = "%b{-} %num. %b{%relname} by %b{%u_name}/%g_name (%b{%files}f/%b{%mbytes}mb/%age)"
announce.NEW_NONE               = "%b{-} mo releases found"

## IRC Command: !dupe/!search
announce.SEARCH                 = "%b{(search)} searching for: %pattern"
announce.SEARCH_BODY            = "%b{-} %num. %b{%relname} (%b{%files}F/%b{%mbytes}mb/%age)"
announce.SEARCH_NONE            = "%b{-} no matching results found"

## IRC Command: !nukes
announce.NUKES                  = "%b{(nukes)} latest nukes in: %b{%section}"
announce.NUKES_BODY             = "%b{-} %date %b{%reldir} was nuked %b{%multiplier}x by %b{%nuker}. Reason: %b{%reason}"
announce.NUKES_NONE             = "%b{-} no nukes found"

## IRC Command: !unnukes
announce.UNNUKES                = "%b{(unnukes)} Latest Unnukes In: %b{%section}"
announce.UNNUKES_BODY           = "%b{-} %date %b{%reldir} was unnuked %b{%multiplier}x by %b{%unnuker}. Reason: %b{%reason}"
announce.UNNUKES_NONE           = "%b{-} no unnukes found"

#announce.PREBW                  = "%l6{%u{prebw}} %l6{%section} %c4{%reldir} | %prebw"
announce.PREBW			= "%l6{%u{prebw}} %l6{%section} %c4{%reldir} | %t1s: %b{%u1}@%b{%b1}mb/s %t2s: %b{%u2}@%b{%b2}mb/s %t3s: %b{%u3}@%b{%b3}mb/s %t4s: %b{%u4}@%b{%b4}mb/s %t5s: %b{%u5}@%b{%b5}mb/s | %c4{avg: %b{%bwavg}mb/s} | %c4{%b{%traffic}mb by %b{%numusers}u/%b{%numgroups}g}"

announce.WHOIS                  = "%l13{%u{whois}} %msg"
announce.SITECMDS               = "%l13{%u{site}} %msg"

announce.REQFILL                = "%l13{%u{filled}} %b{%u_name}/%g_name just filled %b{%releasename} for %b{%u_requester}"
announce.REQWIPE                = "%l13{%u{r-wipe}} %b{%u_name}/%g_name just reqwiped %b{%releasename} | too bad %b{%u_requester}"
announce.REQDEL                 = "%l13{%u{reqdel}} %b{%u_name}/%g_name just deleted his request (%b{%releasename})"
announce.REQMSG                 = "%l13{%u{reqmsg}} %msg"

#announce.GETTOPIC		 = "%l13{%u{topic}} %topic"
#announce.SETTOPIC	         = "%l13{%u{topic}} %channel %topic"
 
announce.BADUSERNAME            = "%l13{%u{login}} %b{%u_name} could not login, invalid username."
announce.BADEMAILPASS           = "%l13{%u{login}} [%b{login }] %b{%u_name} could not login, invalid email as password."

